version: "3.8"

networks:
  quivr-network:
    name: zweites_gehirn_quivr-network
    driver: bridge

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
      # - "54322:54321"
    env_file:
      - .env
    environment:
      - TZ=Europe/Berlin
      - TRAEFIK_DASHBOARD_CREDENTIALS=${TRAEFIK_DASHBOARD_CREDENTIALS}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./data/acme.json:/acme.json:rw
      - ./data/logs:/logs:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.rule=Host(`trdb.virawelt.com`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}"
      # - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https" #new
      - "traefik.http.routers.dashboard.tls.certresolver=cloudflare"
      - "traefik.http.routers.dashboard.tls.domains[0].main=virawelt.com"
      - "traefik.http.routers.dashboard.tls.domains[0].sans=*.virawelt.com"
      - "traefik.http.routers.dashboard.tls.options=default"

  frontend:
    image: quivr-frontend-prebuilt
    pull_policy: never
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_ENV=local
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        - NEXT_PUBLIC_CMS_URL=${NEXT_PUBLIC_CMS_URL}
        - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL}
        - NEXT_PUBLIC_AUTH_MODES=${NEXT_PUBLIC_AUTH_MODES}
    container_name: web
    depends_on:
      - backend-core
      - traefik
    restart: always
    # ports:
    #   - "443:443"
    #   - "54321:54321"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`bb.virawelt.com`)"
      - "traefik.http.routers.frontend.entrypoints=https"
      - "traefik.http.routers.frontend.tls.certresolver=cloudflare"
      # - "traefik.http.routers.frontend.service=supabase"
      # - "traefik.http.services.supabase.loadbalancer.server.scheme=https"
      # - "traefik.http.services.supabase.loadbalancer.server.port=54321"
      # - "traefik.http.routers.supabase.entrypoints=https-sb"
      # - "traefik.http.routers.supabase.rule=Host(`bb.virawelt.com`)"
      # - "traefik.http.services.supabase.loadbalancer.serversTransport=insecuretransport@file" #new

  backend-core:
    image: stangirard/quivr-backend-prebuilt:latest
    pull_policy: if_not_present
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend-core
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:5050/healthz" ]
    command:
      - "uvicorn"
      - "main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "5050"
      - "--workers"
      - "6"
    restart: always
    volumes:
      - ./backend/:/code/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.virawelt.com`)"
      - "traefik.http.routers.backend.entrypoints=https"
      - "traefik.http.routers.backend.tls.certresolver=cloudflare"
      - "traefik.http.services.backend.loadbalancer.server.port=5050"
      # - "traefik.http.routers.backend.service=supabase"
      # - "traefik.http.services.supabase.loadbalancer.server.scheme=https"
      # - "traefik.http.services.supabase.loadbalancer.server.port=54321"
      # - "traefik.http.services.supabase.loadbalancer.serversTransport=insecuretransport@file" #new
    depends_on:
      - redis
      - traefik
      - worker
      - beat

  redis:
    image: redis:latest
    container_name: redis
    restart: always

  worker:
    pull_policy: if_not_present
    image: stangirard/quivr-backend-prebuilt:latest
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: celery -A celery_worker worker -l info
    restart: always
    depends_on:
      - redis

  beat:
    image: stangirard/quivr-backend-prebuilt:latest
    pull_policy: if_not_present
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: beat
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: celery -A celery_worker beat -l info
    restart: always
    depends_on:
      - redis

  flower:
    image: stangirard/quivr-backend-prebuilt:latest
    pull_policy: if_not_present
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: flower
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: celery -A celery_worker flower -l info --port=5555
    restart: always
    depends_on:
      - redis
      - worker
      - beat
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=Host(`flower.api.virawelt.com`)"
      - "traefik.http.routers.flower.entrypoints=https"
      - "traefik.http.routers.flower.tls.certresolver=cloudflare"
      - "traefik.http.services.flower.loadbalancer.server.port=5555"
